#!/usr/bin/env node
var util = require('util');
var async = require('async');
var mongoose = require('mongoose');
var models = require('./models');

var MONGODB_URI = process.env.MONGODB_URI;

var clientPrefix = 'CLIENT_';

mongoose.connect(MONGODB_URI);

var find = function (name, done) {
    models.Release.find({
        type: 'serandomps',
        name: name
    }).limit(1).sort({_id: -1}).exec(function (err, releases) {
        if (err) {
            return done(err);
        }
        if (!releases.length) {
            return done(new Error(util.format('cannot find a release for client: %s', name)));
        }
        var release = releases[0];
        done(null, util.format('export %s%s_INDEX=%s', clientPrefix, release.name.toUpperCase(), release.version));
    });
};

var code = [];

async.each(Object.keys(process.env), function (name, found) {
    if (name.indexOf(clientPrefix) !== 0) {
        return found();
    }
    var version = process.env[name];
    if (version !== 'master') {
        return found();
    }
    var client = name.substring(clientPrefix.length).toLowerCase();
    find(client, function (err, release) {
        if (err) {
            return found(err);
        }
        code.push(release);
        found();
    });
}, function (err) {
    if (err) {
        console.error(err);
        return process.exit(1);
    }
    console.log(code.join('\\n'));
    process.exit(0);
});