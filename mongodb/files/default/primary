#!/usr/bin/env bash

echo "initializing replica set"

AWS_KEY=$1
AWS_SECRET=$2
MONGODB_USERNAME_ADMIN=$3
MONGODB_PASSWORD_ADMIN=$4
MONGODB_USERNAME_APPS=$5
MONGODB_PASSWORD_APPS=$6
REPLICA_SET="serandives"

./install "${AWS_KEY}" "${AWS_SECRET}" "${MONGODB_USERNAME_ADMIN}" "${MONGODB_PASSWORD_ADMIN}"

mv /etc/mongod-bootstrap.conf /etc/mongod.conf

service mongod start

sleep 2

mongo --eval "db.getSiblingDB('admin').createUser({user: '${MONGODB_USERNAME_ADMIN}', pwd: '${MONGODB_PASSWORD_ADMIN}', roles: [{role: 'userAdminAnyDatabase', db: 'admin'}, {role: 'dbAdminAnyDatabase', db: 'admin'}, {role: 'readWriteAnyDatabase', db: 'admin'}, {role: 'clusterAdmin', db: 'admin'}]})"
mongo --eval "db.getSiblingDB('admin').createUser({user: '${MONGODB_USERNAME_APPS}', pwd: '${MONGODB_PASSWORD_APPS}', roles: [{role: 'readWrite', db: 'serandives'}]})"

mv /etc/mongod-custom.conf /etc/mongod.conf

service mongod restart

sleep 2

mongo admin --host ${HOSTNAME} --ssl --sslCAFile /etc/ssl/serandivesCA.crt --sslPEMKeyFile /etc/ssl/server.pem --sslAllowInvalidHostnames -u ${MONGODB_USERNAME_ADMIN} -p ${MONGODB_PASSWORD_ADMIN} --eval "rs.initiate({_id : '${REPLICA_SET}', members: [{_id : 0, host: '${HOSTNAME}'}]})"